?addCircles
knitr::opts_chunk$set(echo = FALSE)
source('dataSetup.R')
library(leaflet)
?addCircles
?leaflet
library(help='leaflet')
#Get US daily report data---------------
files<-list.files('./csse_covid_19_data/csse_covid_19_daily_reports_us/')
files
#Get US daily report data---------------
files<-list.files('./csse_covid_19_data/csse_covid_19_daily_reports_us/',
patter='.csv')
#Get US daily report data---------------
files<-list.files('./csse_covid_19_data/csse_covid_19_daily_reports_us/',
pattern='.csv')
#Get US daily report data---------------
files<-list.files('./csse_covid_19_data/csse_covid_19_daily_reports_us/',
pattern='.csv',full.names = TRUE)
files
usData<-fread(files[1])
View(usData)
usData<-data.frame()
for(i in files){
inData<-fread(files[i])
usData<-usData %>% bind_rows(inData)
}
files
usData<-data.frame()
for(i in files){
inData<-fread(files[i])
usData<-usData %>% bind_rows(inData)
}
#Testing
i<-2
#Testing
i<-files[2]
inData<-fread(files[i])
#Testing
i<-1
inData<-fread(files[i])
usData<-data.frame()
for(i in 1:length(files)){
#Testing
#i<-1
####
inData<-fread(files[i])
usData<-usData %>% bind_rows(inData)
}
#Shape into long format
usDataL<-usData %>%
gather(Parameter,Result,6:ncol(usData))
View(usDataL)
unique(usDataL$Parameter)
#Shape into long format
usDataL<-usData %>%
gather(Parameter,Result,6:ncol(usData)) %>%
mutate(
Date = as.Date(Last_Update,format="%Y-%m-%d %H:%M:%S")
)
#Shape into long format
usDataL<-usData %>%
gather(Parameter,Result,6:ncol(usData)) %>%
mutate(
Date = as.Date(Last_Update,format="%Y-%m-%d %H:%M:%S")
)
cdata<-usDataL %>% filter(Parameter == 'Confirmed')
ddata<-usDataL %>% filter(Parameter == 'Deaths')
names(cdata)
View(cdata)
#Shape into long format
usDataL<-usData %>%
gather(Parameter,Result,6:ncol(usData)) %>%
mutate(
Date = as.Date(Last_Update,format="%Y-%m-%d %H:%M:%S")
) %>%
filter(!is.na(Lat))
#Shape into long format
usDataL<-usData %>%
gather(Parameter,Result,6:ncol(usData)) %>%
mutate(
Date = as.Date(Last_Update,format="%Y-%m-%d %H:%M:%S"),
Result = as.numeric(Result)
) %>%
filter(!is.na(Lat))
?addCircles
cdata<-usDataL %>% filter(Parameter == 'Confirmed') %>%
group_by(Province_State,Lat,Long_) %>%
summarize(Result = max(Result))
View(cdata)
ggplot(usDataL,aes(Date,Result,color=Province_State))+
geom_line()
ggplot(usDataL,aes(Date,Result,color=Province_State))+
geom_line()+
theme(legend=NULL)
ggplot(usDataL,aes(Date,Result,color=Province_State))+
geom_line()+
theme(legend.position='None')
options(scipen = 6)
unique(usDataL$Parameter)
gdata<-usDataL %>%
filter(Parameter=='Confirmed')
gdata<-usDataL %>%
filter(Parameter=='Confirmed')
ggplot(gdata,aes(Date,Result,color=Province_State))+
geom_line()+
theme(legend.position='None')
library(plotly)
gdata<-usDataL %>%
filter(Parameter=='Confirmed')
g<-ggplot(gdata,aes(Date,Result,color=Province_State))+
geom_line(color='gray')+
theme(legend.position='None')
ggplotly(g)
gdata<-usDataL %>%
filter(Parameter=='Confirmed')
g<-ggplot(gdata,aes(Date,Result,color=Province_State))+
geom_line()+
theme(legend.position='None')+
scale_color_manual(values = rep('gray',length(unique(Province_State))))
gdata<-usDataL %>%
filter(Parameter=='Confirmed')
n<-length(uniquegdata$Province_State)
gdata<-usDataL %>%
filter(Parameter=='Confirmed')
n<-length(unique(gdata$Province_State))
g<-ggplot(gdata,aes(Date,Result,color=Province_State))+
geom_line()+
theme(legend.position='None')+
scale_color_manual(values = rep('grey',n))
g
?ggplotly
download.file('https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = 'C:\Power_BI\data\covidTS.csv')
download.file('https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = 'C:/Power_BI/data/covidTS.csv')
?download.file
download.file('https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = 'C:/Power_BI/data/covidTS.csv',mode='wb')
download.file('https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = 'C:/Power_BI/data/covidTS.csv',mode='wb')
library(RCurl)
install.packages('RCurl')
library(RCurl)
library(RCurl)
x <- getURL("https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
x <- getURL("https://github.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
x <- getURL("http://github.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
y <- read.csv(text = x)
library(RCurl)
x <- getURL("http://github.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
?getURL
#'peter.eernisse@stantec.com
#'this project is practice for me to do graphics of covid-19 data
#'
#'
#
library(tidyverse)
#Get time series data----------------
tsDataCases<-fread('C:/R_Projects/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')
tsDataDeaths<-fread('C:/R_Projects/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv')
library(data.table)
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,5:ncol(.)) %>%
mutate(Parameter = 'Cases')
deathsL<-tsDataDeaths %>%
gather(DATE,COUNT,5:ncol(.)) %>%
mutate(Parameter = 'Deaths')
tsData<-bind_rows(casesL,deathsL) %>%
mutate(DATE2=as.Date(DATE,format='%m/%d/%y')) %>%
arrange(`Country/Region`,DATE2,Parameter)
mdata<-tsData %>%
mutate(
`Province/State` = case_when(
`Province/State` == '' ~ `Country/Region`,
TRUE ~ `Province/State`
)
) %>%
group_by(`Province/State`,Parameter,Lat,Long) %>%
summarize(Result=max(COUNT))
#Read in data
files<-list.files('C:/R_Projects/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports_us/',
pattern='.csv',full.names = TRUE)
files
usData<-data.frame()
for(i in 1:length(files)){
#Testing
#i<-1
####
inData<-fread(files[i])
usData<-usData %>% bind_rows(inData)
}
#Shape into long format
usDataL<-usData %>%
gather(Parameter,Result,6:ncol(usData)) %>%
mutate(
Date = as.Date(Last_Update,format="%Y-%m-%d %H:%M:%S"),
Result = as.numeric(Result)
) %>%
filter(!is.na(Lat))
#Download data---------------------------
cases<-download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')
#Download data---------------------------
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = './data/cases.xlsx')
#Download data---------------------------
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = './data/cases.csv')
tsDataCases<-fread('./data/cases.csv')
View(tsDataCases)
#Download data---------------------------
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = './data/cases.csv')
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',
destfile = './data/deaths.csv')
tsDataDeaths<-fread('./data/deaths.csv')
knitr::opts_chunk$set(echo = FALSE)
source('dataSetup.R')
#'peter.eernisse@stantec.com
#'this project is practice for me to do graphics of covid-19 data
#'
#'
#
library(tidyverse)
library(data.table)
#Download data---------------------------
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = './data/cases.csv')
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',
destfile = './data/deaths.csv')
tsDataCases<-fread('./data/cases.csv')
tsDataDeaths<-fread('./data/deaths.csv')
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,5:ncol(.)) %>%
mutate(Parameter = 'Cases')
deathsL<-tsDataDeaths %>%
gather(DATE,COUNT,5:ncol(.)) %>%
mutate(Parameter = 'Deaths')
View(deathsL)
View(tsDataDeaths)
View(tsDataCases)
View(tsDataCases)
View(tsDataDeaths)
names(tsDataCases)
setdiff(names(tsDataCases),names(tsDataDeaths))
setdiff(names(tsDataDeaths),names(tsDataCases))
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,5:ncol(.)) %>%
mutate(Parameter = 'Cases')
deathsL<-tsDataDeaths %>%
select(-Population) %>%
gather(DATE,COUNT,5:ncol(.)) %>%
mutate(Parameter = 'Deaths')
#'peter.eernisse@stantec.com
#'this project is practice for me to do graphics of covid-19 data
#'
#'
#
library(tidyverse)
library(data.table)
#Download data---------------------------
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = './data/cases.csv')
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',
destfile = './data/deaths.csv')
tsDataCases<-fread('./data/cases.csv')
tsDataDeaths<-fread('./data/deaths.csv')
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,5:ncol(.)) %>%
mutate(Parameter = 'Cases')
deathsL<-tsDataDeaths %>%
select(-Population) %>%
gather(DATE,COUNT,5:ncol(.)) %>%
mutate(Parameter = 'Deaths')
tsData<-bind_rows(casesL,deathsL) %>%
mutate(DATE2=as.Date(DATE,format='%m/%d/%y')) %>%
arrange(`Country/Region`,DATE2,Parameter)
tsData<-bind_rows(casesL,deathsL) %>%
mutate(DATE2=as.Date(DATE,format='%m/%d/%y'))
View(tsData)
View(tsDataCases)
#Get time series data----------------
tsDataCases<-fread('C:/R_Projects/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')
View(tsDataCases)
tsDataCases<-fread('./data/cases.csv')
View(tsDataCases)
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,11:ncol(.)) %>%
mutate(Parameter = 'Cases')
View(casesL)
#Download data---------------------------
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = './data/cases.csv')
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',
destfile = './data/deaths.csv')
tsDataCases<-fread('./data/cases.csv')
tsDataDeaths<-fread('./data/deaths.csv')
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,11:ncol(.)) %>%
mutate(Parameter = 'Cases')
View(casesL)
View(tsDataCases)
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,12:ncol(.)) %>%
mutate(Parameter = 'Cases')
View(casesL)
summary(casesL$COUNT)
View(deathsL)
View(tsDataDeaths)
deathsL<-tsDataDeaths %>%
gather(DATE,COUNT,13:ncol(.)) %>%
mutate(Parameter = 'Deaths')
View(deathsL)
#'peter.eernisse@stantec.com
#'this project is practice for me to do graphics of covid-19 data
#'
#'
#
library(tidyverse)
library(data.table)
#Download data---------------------------
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv',
destfile = './data/cases.csv')
download.file('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv',
destfile = './data/deaths.csv')
tsDataCases<-fread('./data/cases.csv')
tsDataDeaths<-fread('./data/deaths.csv')
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,12:ncol(.)) %>%
mutate(Parameter = 'Cases')
deathsL<-tsDataDeaths %>%
gather(DATE,COUNT,13:ncol(.)) %>%
mutate(Parameter = 'Deaths')
tsData<-bind_rows(casesL,deathsL) %>%
mutate(DATE2=as.Date(DATE,format='%m/%d/%y')) %>%
arrange(`Country/Region`,DATE2,Parameter)
tsData<-bind_rows(casesL,deathsL)
View(tsData)
View(casesL)
View(deathsL)
#Reorganize data
casesL<-tsDataCases %>%
gather(DATE,COUNT,12:ncol(.)) %>%
mutate(Parameter = 'Cases')
deathsL<-tsDataDeaths %>%
gather(DATE,COUNT,13:ncol(.)) %>%
mutate(Parameter = 'Deaths')
tsData<-bind_rows(casesL,deathsL) %>%
mutate(DATE2=as.Date(DATE,format='%m/%d/%y')) %>%
arrange(`Country_Region`,DATE2,Parameter)
mdata<-tsData %>%
mutate(
`Province/State` = case_when(
`Province/State` == '' ~ `Country/Region`,
TRUE ~ `Province/State`
)
) %>%
group_by(`Province/State`,Parameter,Lat,Long) %>%
summarize(Result=max(COUNT))
mdata<-tsData %>%
mutate(
`Province_State` = case_when(
`Province_State` == '' ~ `Country/Region`,
TRUE ~ `Province_State`
)
) %>%
group_by(`Province_State`,Parameter,Lat,Long) %>%
summarize(Result=max(COUNT))
mdata<-tsData %>%
mutate(
`Province_State` = case_when(
`Province_State` == '' ~ `Country_Region`,
TRUE ~ `Province_State`
)
) %>%
group_by(`Province_State`,Parameter,Lat,Long) %>%
summarize(Result=max(COUNT))
mdata<-tsData %>%
mutate(
`Province_State` = case_when(
`Province_State` == '' ~ `Country_Region`,
TRUE ~ `Province_State`
)
) %>%
group_by(`Province_State`,Parameter,Lat,Long_) %>%
summarize(Result=max(COUNT))
View(mdata)
#Read in data
files<-list.files('C:/R_Projects/COVID-19/csse_covid_19_data/csse_covid_19_daily_reports_us/',
pattern='.csv',full.names = TRUE)
files
usData<-data.frame()
for(i in 1:length(files)){
#Testing
#i<-1
####
inData<-fread(files[i])
usData<-usData %>% bind_rows(inData)
}
View(usData)
#Shape into long format
usDataL<-usData %>%
gather(Parameter,Result,6:ncol(usData)) %>%
mutate(
Date = as.Date(Last_Update,format="%Y-%m-%d %H:%M:%S"),
Result = as.numeric(Result)
) %>%
filter(!is.na(Lat))
knitr::opts_chunk$set(echo = FALSE)
source('dataSetup.R')
library(leaflet)
library(plotly)
options(scipen = 6)
mc<-mdata %>% filter(Parameter=='Cases')
md<-mdata %>% filter(Parameter=='Deaths')
#Make map
leaflet() %>%
addTiles() %>%
addCircles(lat=mc$Lat,lng=mc$Long,radius=mc$Result*.5,
weight=.5,fillColor = 'blue',popup = paste0(mc$`Province/State`,"; ",mc$Result," cases"),group = 'Cases') %>%
addCircles(lat=mc$Lat,lng=mc$Long,radius=md$Result,
weight=.5,fillColor = 'red',popup = paste0(md$`Province/State`,"; ",md$Result," deaths"),group = 'Deaths') %>%
addLayersControl(
#baseGroups = c("OSM (default)", "Toner", "Toner Lite"),
overlayGroups = c("Cases","Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
View(mc)
shiny::runApp('covid19')
library(ggplot2)
3401+2961+2762
shiny::runApp('covid19')
#Data setup
source('dataSetup.R')
View(casesL)
#Make time series plot
gdata<-usDataL %>%
filter(Parameter=='Confirmed',
Result>0 & Result != '')
n<-length(unique(gdata$Province_State))
shiny::runApp('covid19')
